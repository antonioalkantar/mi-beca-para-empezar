package mx.gob.cdmx.adip.beca.model;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Encuesta generated by hbm2java
 */
@Entity
@Table(name = "encuesta", schema = "mibecaparaempezar")
@NamedQueries({
	@NamedQuery(name = "Encuesta.findByIdSolicitud", query = "SELECT NEW mx.gob.cdmx.adip.beca.commons.dto.EncuestaDTO "
			+"( "
			+ "e.idEncuesta, "
			+ "cgp.idGrupoPertenece, cgp.estatus, cgp.descripcion,  "
			+ "cif.idIngresosFamilia, cif.estatus, cif.descripcion,  "
			+ "cmd.idMaterialesDomicilio, cmd.estatus, cmd.descripcion,  "
			+ "ctd.idTipoDomicilio, ctd.estatus, ctd.descripcion, "
			+ "s.idSolicitud,  "
			+ "e.numeroHabitantes, "
			+ "e.habitantesTrabajadores, "
			+ "e.utilesEscolares, "
			+ "e.ropa, "
			+ "e.zapatos, "
			+ "e.comida, "
			+ "e.juguetes, "
			+ "e.otro, "
			+ "e.especificaOtro, "
			+ "e.otroGrupo "
			+") "
			+"FROM Encuesta e "
			+"LEFT JOIN e.solicitud s "	
			+"LEFT JOIN e.catGrupoPertenece cgp "	
			+"LEFT JOIN e.catIngresosFamilia cif "	
			+"LEFT JOIN e.catMaterialesDomicilio cmd "	
			+"LEFT JOIN e.catTipoDomicilio ctd "	
			+"where s.idSolicitud = :idSolicitud ")
})
public class Encuesta implements java.io.Serializable {
	
	private static final long serialVersionUID = 5079986367718380459L;
	private int idEncuesta;
	private CatGrupoPertenece catGrupoPertenece;
	private CatIngresosFamilia catIngresosFamilia;
	private CatMaterialesDomicilio catMaterialesDomicilio;
	private CatTipoDomicilio catTipoDomicilio;
	private Solicitud solicitud;
	private int numeroHabitantes;
	private int habitantesTrabajadores;
	private Boolean utilesEscolares;
	private Boolean ropa;
	private Boolean zapatos;
	private Boolean comida;
	private Boolean juguetes;
	private Boolean otro;
	private String especificaOtro;
	private String otroGrupo;
	private Date fechaCreacion;
	private CatCicloEscolar catCicloEscolar;
	
	public Encuesta() {
	}

	public Encuesta(int idEncuesta, CatGrupoPertenece catGrupoPertenece, CatIngresosFamilia catIngresosFamilia,
			CatMaterialesDomicilio catMaterialesDomicilio, CatTipoDomicilio catTipoDomicilio, Solicitud solicitud,
			int numeroHabitantes, int habitantesTrabajadores) {
		this.idEncuesta = idEncuesta;
		this.catGrupoPertenece = catGrupoPertenece;
		this.catIngresosFamilia = catIngresosFamilia;
		this.catMaterialesDomicilio = catMaterialesDomicilio;
		this.catTipoDomicilio = catTipoDomicilio;
		this.solicitud = solicitud;
		this.numeroHabitantes = numeroHabitantes;
		this.habitantesTrabajadores = habitantesTrabajadores;
	}

	public Encuesta(int idEncuesta, CatGrupoPertenece catGrupoPertenece, CatIngresosFamilia catIngresosFamilia,
			CatMaterialesDomicilio catMaterialesDomicilio, CatTipoDomicilio catTipoDomicilio, Solicitud solicitud,
			int numeroHabitantes, int habitantesTrabajadores, Boolean utilesEscolares, Boolean ropa, Boolean zapatos,
			Boolean comida, Boolean juguetes, Boolean otro, String especificaOtro) {
		this.idEncuesta = idEncuesta;
		this.catGrupoPertenece = catGrupoPertenece;
		this.catIngresosFamilia = catIngresosFamilia;
		this.catMaterialesDomicilio = catMaterialesDomicilio;
		this.catTipoDomicilio = catTipoDomicilio;
		this.solicitud = solicitud;
		this.numeroHabitantes = numeroHabitantes;
		this.habitantesTrabajadores = habitantesTrabajadores;
		this.utilesEscolares = utilesEscolares;
		this.ropa = ropa;
		this.zapatos = zapatos;
		this.comida = comida;
		this.juguetes = juguetes;
		this.otro = otro;
		this.especificaOtro = especificaOtro;
	}
	
	public Encuesta(int idEncuesta, CatGrupoPertenece catGrupoPertenece, CatIngresosFamilia catIngresosFamilia,
			CatMaterialesDomicilio catMaterialesDomicilio, CatTipoDomicilio catTipoDomicilio, Solicitud solicitud,
			int numeroHabitantes, int habitantesTrabajadores, Boolean utilesEscolares, Boolean ropa, Boolean zapatos,
			Boolean comida, Boolean juguetes, Boolean otro, String especificaOtro, String otroGrupo, Date fechaCreacion,
			CatCicloEscolar catCicloEscolar) {
		this.idEncuesta = idEncuesta;
		this.catGrupoPertenece = catGrupoPertenece;
		this.catIngresosFamilia = catIngresosFamilia;
		this.catMaterialesDomicilio = catMaterialesDomicilio;
		this.catTipoDomicilio = catTipoDomicilio;
		this.solicitud = solicitud;
		this.numeroHabitantes = numeroHabitantes;
		this.habitantesTrabajadores = habitantesTrabajadores;
		this.utilesEscolares = utilesEscolares;
		this.ropa = ropa;
		this.zapatos = zapatos;
		this.comida = comida;
		this.juguetes = juguetes;
		this.otro = otro;
		this.especificaOtro = especificaOtro;
		this.otroGrupo = otroGrupo;
		this.fechaCreacion = fechaCreacion;
		this.catCicloEscolar = catCicloEscolar;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id_encuesta", unique = true, nullable = false)
	public int getIdEncuesta() {
		return this.idEncuesta;
	}

	public void setIdEncuesta(int idEncuesta) {
		this.idEncuesta = idEncuesta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_grupo_pertenece", nullable = false)
	public CatGrupoPertenece getCatGrupoPertenece() {
		return this.catGrupoPertenece;
	}

	public void setCatGrupoPertenece(CatGrupoPertenece catGrupoPertenece) {
		this.catGrupoPertenece = catGrupoPertenece;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ingresos_familia", nullable = false)
	public CatIngresosFamilia getCatIngresosFamilia() {
		return this.catIngresosFamilia;
	}

	public void setCatIngresosFamilia(CatIngresosFamilia catIngresosFamilia) {
		this.catIngresosFamilia = catIngresosFamilia;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_materiales_domicilio", nullable = false)
	public CatMaterialesDomicilio getCatMaterialesDomicilio() {
		return this.catMaterialesDomicilio;
	}

	public void setCatMaterialesDomicilio(CatMaterialesDomicilio catMaterialesDomicilio) {
		this.catMaterialesDomicilio = catMaterialesDomicilio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_tipo_domicilio", nullable = false)
	public CatTipoDomicilio getCatTipoDomicilio() {
		return this.catTipoDomicilio;
	}

	public void setCatTipoDomicilio(CatTipoDomicilio catTipoDomicilio) {
		this.catTipoDomicilio = catTipoDomicilio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_solicitud", nullable = false)
	public Solicitud getSolicitud() {
		return this.solicitud;
	}

	public void setSolicitud(Solicitud solicitud) {
		this.solicitud = solicitud;
	}

	@Column(name = "numero_habitantes", nullable = false)
	public int getNumeroHabitantes() {
		return this.numeroHabitantes;
	}

	public void setNumeroHabitantes(int numeroHabitantes) {
		this.numeroHabitantes = numeroHabitantes;
	}

	@Column(name = "habitantes_trabajadores", nullable = false)
	public int getHabitantesTrabajadores() {
		return this.habitantesTrabajadores;
	}

	public void setHabitantesTrabajadores(int habitantesTrabajadores) {
		this.habitantesTrabajadores = habitantesTrabajadores;
	}

	@Column(name = "utiles_escolares")
	public Boolean getUtilesEscolares() {
		return this.utilesEscolares;
	}

	public void setUtilesEscolares(Boolean utilesEscolares) {
		this.utilesEscolares = utilesEscolares;
	}

	@Column(name = "ropa")
	public Boolean getRopa() {
		return this.ropa;
	}

	public void setRopa(Boolean ropa) {
		this.ropa = ropa;
	}

	@Column(name = "zapatos")
	public Boolean getZapatos() {
		return this.zapatos;
	}

	public void setZapatos(Boolean zapatos) {
		this.zapatos = zapatos;
	}

	@Column(name = "comida")
	public Boolean getComida() {
		return this.comida;
	}

	public void setComida(Boolean comida) {
		this.comida = comida;
	}

	@Column(name = "juguetes")
	public Boolean getJuguetes() {
		return this.juguetes;
	}

	public void setJuguetes(Boolean juguetes) {
		this.juguetes = juguetes;
	}

	@Column(name = "otro")
	public Boolean getOtro() {
		return this.otro;
	}

	public void setOtro(Boolean otro) {
		this.otro = otro;
	}

	@Column(name = "especifica_otro", length = 50)
	public String getEspecificaOtro() {
		return this.especificaOtro;
	}

	public void setEspecificaOtro(String especificaOtro) {
		this.especificaOtro = especificaOtro;
	}

	@Column(name = "otro_grupo", length = 50)
	public String getOtroGrupo() {
		return otroGrupo;
	}

	public void setOtroGrupo(String otroGrupo) {
		this.otroGrupo = otroGrupo;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecha_creacion", nullable = true)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ciclo_escolar", nullable = false)
	public CatCicloEscolar getCatCicloEscolar() {
		return this.catCicloEscolar;
	}

	public void setCatCicloEscolar(CatCicloEscolar catCicloEscolar) {
		this.catCicloEscolar = catCicloEscolar;
	}

}
