package mx.gob.cdmx.adip.beca.model;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * CrcBeneficiarioSolicitud generated by hbm2java
 */
@Entity
@Table(name = "crc_beneficiario_solicitud", schema = "mibecaparaempezar")
@NamedQueries({
	@NamedQuery(name = "CrcBeneficiarioSolicitud.findByIdLlave"
			, query = "SELECT NEW mx.gob.cdmx.adip.beca.commons.dto.CrcBeneficiarioSolicitudDTO("
			+ "	cbs.idBenefSolic,"
			+ "	b.idBeneficiario,"
			+ "	b.nombresBeneficiario,"
			+ "	b.primerApellidoBeneficiario,"
			+ "	b.segundoApellidoBeneficiario,"
			+ "	s.idSolicitud,"
			+ "	s.folioSolicitud,"
			+ "	ceb.idEstatusBeneficiario,"
			+ " ceb.descripcion "
			+ ")"
			+ "	FROM CrcBeneficiarioSolicitud cbs"
			+ "	INNER JOIN cbs.beneficiario b"
			+ "	INNER JOIN cbs.solicitud s"
			+ "	INNER JOIN s.tutor t"
			+ "	INNER JOIN s.catEstatusBeneficiario ceb"
			+ "	WHERE t.idUsuarioLlaveCdmx = :idUsuarioLlave"
			)
	,@NamedQuery(name = "CrcBeneficiarioSolicitud.findByFolioSolicitud", 
		query = "SELECT NEW mx.gob.cdmx.adip.beca.commons.dto.CrcBeneficiarioSolicitudDTO("
			+ "	cbs.idBenefSolic,"
			+ "	b.idBeneficiario,"
			+ "	b.curpBeneficiario,"
			+ "	b.nombresBeneficiario,"
			+ "	b.primerApellidoBeneficiario,"
			+ "	b.segundoApellidoBeneficiario,"
			+ "	b.nacionalidad,"
			+ "	b.fechaNacimientoBeneficiario,"
			+ "	b.esTutor,"
			+ "	s.idSolicitud,"
			+ "	s.folioSolicitud,"
			+ "	s.nombre,"
			+ "	cne.idNivel,"
			+ "	cne.descripcion,"
			+ "	s.turno,"
			+ "	s.gradoEscolar, "
			+ " s.cct, "
			+ " s.colonia, "
			+ " s.calle, "
			+ " cm.idMunicipio, "
			+ " cm.municipio, "
			+ " s.codigopostal, "
			+ "	ceb.idEstatusBeneficiario, "
			+ " ceb.descripcion, "
			+ "	cp.idParentesco,"
			+ "	cp.descripcion"
			+ ")"
			+ "	FROM CrcBeneficiarioSolicitud cbs"
			+ "	INNER JOIN cbs.beneficiario b"
			+ "	INNER JOIN cbs.solicitud s"
			+ "	INNER JOIN s.tutor t"
			+ "	INNER JOIN s.catParentesco cp"
			+ "	INNER JOIN s.catNivelEducativo cne"
			+ "	INNER JOIN s.catEstatusBeneficiario ceb"
			+ " INNER JOIN s.catMunicipios cm "
			+ "	WHERE s.idSolicitud = :idSolicitud"
			)
,@NamedQuery(name = "CrcBeneficiarioSolicitud.findByRechazadoPagatodo", 
	query = "SELECT NEW mx.gob.cdmx.adip.beca.commons.dto.CrcBeneficiarioSolicitudDTO("
		+ "	cbs.idBenefSolic,"
		+ "	b.idBeneficiario,"
		+ "	b.curpBeneficiario,"
		+ "	b.nombresBeneficiario,"
		+ "	b.primerApellidoBeneficiario,"
		+ "	b.segundoApellidoBeneficiario,"
		+ "	b.nacionalidad,"
		+ "	b.fechaNacimientoBeneficiario,"
		+ "	b.esTutor,"
		+ "	s.idSolicitud,"
		+ "	t.idUsuarioLlaveCdmx,"
		+ "	t.nombre,"
		+ "	t.primerApellido,"
		+ "	t.segundoApellido,"
		+ "	t.curp,"
		+ "	t.fechaNacimiento,"
		+ "	t.correo,"
		+ "	t.telefono,"
		+ "	t.esExtranjero,"
		+ "	t.sexo,"
		+ "	d.idCuentaBeneficiario,"
		+ "	d.numeroCuenta"
		+ ")"
		+ "	FROM CrcBeneficiarioSolicitud cbs"
		+ "	 JOIN cbs.beneficiario b"
		+ "	 JOIN cbs.solicitud s"
		+ "	 JOIN s.tutor t "
		+ "	 JOIN b.detCuentaBeneficiario d "
		+" where s.pagatodoEnvioExitoso = false")

})
public class CrcBeneficiarioSolicitud implements Serializable {

	private static final long serialVersionUID = -4675398671397793949L;
	private Long idBenefSolic;
	private Beneficiario beneficiario;
	private Solicitud solicitud;

	public CrcBeneficiarioSolicitud() {
	}

	public CrcBeneficiarioSolicitud(Long idBenefSolic, Beneficiario beneficiario, Solicitud solicitud) {
		this.idBenefSolic = idBenefSolic;
		this.beneficiario = beneficiario;
		this.solicitud = solicitud;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "id_benef_solic", unique = true, nullable = false)
	public Long getIdBenefSolic() {
		return this.idBenefSolic;
	}

	public void setIdBenefSolic(Long idBenefSolic) {
		this.idBenefSolic = idBenefSolic;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_beneficiario", nullable = false)
	public Beneficiario getBeneficiario() {
		return this.beneficiario;
	}

	public void setBeneficiario(Beneficiario beneficiario) {
		this.beneficiario = beneficiario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_solicitud", nullable = false)
	public Solicitud getSolicitud() {
		return this.solicitud;
	}

	public void setSolicitud(Solicitud solicitud) {
		this.solicitud = solicitud;
	}

}
